{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.tracked_wallets": {
      "name": "tracked_wallets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "network": {
          "name": "network",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'eth'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "unique_wallet_network": {
          "name": "unique_wallet_network",
          "columns": [
            {
              "expression": "address",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "network",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to tracked wallets": {
          "name": "Allow public read access to tracked wallets",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow public insert access to tracked wallets": {
          "name": "Allow public insert access to tracked wallets",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Allow public update access to tracked wallets": {
          "name": "Allow public update access to tracked wallets",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Allow public delete access to tracked wallets": {
          "name": "Allow public delete access to tracked wallets",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.wallet_risk_ratings": {
      "name": "wallet_risk_ratings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "first_tx_date": {
          "name": "first_tx_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "total_transactions": {
          "name": "total_transactions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "failed_transactions": {
          "name": "failed_transactions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "wallet_age_days": {
          "name": "wallet_age_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "failed_tx_ratio": {
          "name": "failed_tx_ratio",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "risk_score": {
          "name": "risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "risk_level": {
          "name": "risk_level",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_updated": {
          "name": "last_updated",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "network": {
          "name": "network",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'ethereum'"
        }
      },
      "indexes": {
        "idx_wallet_risk_ratings_wallet_address": {
          "name": "idx_wallet_risk_ratings_wallet_address",
          "columns": [
            {
              "expression": "wallet_address",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "wallet_risk_ratings_wallet_address_key": {
          "columns": [
            "wallet_address"
          ],
          "nullsNotDistinct": false,
          "name": "wallet_risk_ratings_wallet_address_key"
        }
      },
      "checkConstraints": {
        "wallet_risk_ratings_risk_level_check": {
          "name": "wallet_risk_ratings_risk_level_check",
          "value": "risk_level = ANY (ARRAY['LOW'::text, 'MEDIUM'::text, 'HIGH'::text])"
        },
        "wallet_risk_ratings_risk_score_check": {
          "name": "wallet_risk_ratings_risk_score_check",
          "value": "(risk_score >= 1) AND (risk_score <= 10)"
        }
      },
      "policies": {
        "Allow public read access to wallet risk ratings": {
          "name": "Allow public read access to wallet risk ratings",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to wallet risk ratings": {
          "name": "Allow service role full access to wallet risk ratings",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.stablecoin_transfers": {
      "name": "stablecoin_transfers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "block_time": {
          "name": "block_time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "token_symbol": {
          "name": "token_symbol",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token_name": {
          "name": "token_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "sender_address": {
          "name": "sender_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "receiver_address": {
          "name": "receiver_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "network": {
          "name": "network",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ethereum'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_stablecoin_transfers_block_time": {
          "name": "idx_stablecoin_transfers_block_time",
          "columns": [
            {
              "expression": "block_time",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_stablecoin_transfers_token_symbol": {
          "name": "idx_stablecoin_transfers_token_symbol",
          "columns": [
            {
              "expression": "token_symbol",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to stablecoin transfers": {
          "name": "Allow public read access to stablecoin transfers",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to stablecoin transfers": {
          "name": "Allow service role full access to stablecoin transfers",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.wallet_transactions": {
      "name": "wallet_transactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tx_hash": {
          "name": "tx_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "value_eth": {
          "name": "value_eth",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "from_address": {
          "name": "from_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "to_address": {
          "name": "to_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_error": {
          "name": "is_error",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_wallet_transactions_timestamp": {
          "name": "idx_wallet_transactions_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_wallet_transactions_wallet_address": {
          "name": "idx_wallet_transactions_wallet_address",
          "columns": [
            {
              "expression": "wallet_address",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "wallet_transactions_tx_hash_key": {
          "columns": [
            "tx_hash"
          ],
          "nullsNotDistinct": false,
          "name": "wallet_transactions_tx_hash_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Allow public read access to wallet transactions": {
          "name": "Allow public read access to wallet transactions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to wallet transactions": {
          "name": "Allow service role full access to wallet transactions",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.real_time_transfers": {
      "name": "real_time_transfers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "hash": {
          "name": "hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "block_number": {
          "name": "block_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "from_address": {
          "name": "from_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "to_address": {
          "name": "to_address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ETH'"
        },
        "usd_value": {
          "name": "usd_value",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "is_whale": {
          "name": "is_whale",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "network": {
          "name": "network",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'ethereum'"
        },
        "gas_price": {
          "name": "gas_price",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "gas_used": {
          "name": "gas_used",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_real_time_transfers_amount": {
          "name": "idx_real_time_transfers_amount",
          "columns": [
            {
              "expression": "amount",
              "asc": false,
              "nulls": "first",
              "opclass": "numeric_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_real_time_transfers_timestamp": {
          "name": "idx_real_time_transfers_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_real_time_transfers_whale": {
          "name": "idx_real_time_transfers_whale",
          "columns": [
            {
              "expression": "is_whale",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(is_whale = true)",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to real_time_transfers": {
          "name": "Allow public read access to real_time_transfers",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to real_time_transfers": {
          "name": "Allow service role full access to real_time_transfers",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.api_endpoints": {
      "name": "api_endpoints",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "method": {
          "name": "method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "parameters": {
          "name": "parameters",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "response_schema": {
          "name": "response_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "example_request": {
          "name": "example_request",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "example_response": {
          "name": "example_response",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rate_limit": {
          "name": "rate_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 60
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to api endpoints": {
          "name": "Allow public read access to api endpoints",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to api endpoints": {
          "name": "Allow service role full access to api endpoints",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "key_hash": {
          "name": "key_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "rate_limit_per_minute": {
          "name": "rate_limit_per_minute",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 60
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "partner_id": {
          "name": "partner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "active": {
          "name": "active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {
        "idx_api_keys_active": {
          "name": "idx_api_keys_active",
          "columns": [
            {
              "expression": "active",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_keys_hash": {
          "name": "idx_api_keys_hash",
          "columns": [
            {
              "expression": "key_hash",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_keys_key": {
          "name": "idx_api_keys_key",
          "columns": [
            {
              "expression": "key",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_keys_user_id_fkey": {
          "name": "api_keys_user_id_fkey",
          "tableFrom": "api_keys",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_keys_key_hash_key": {
          "columns": [
            "key_hash"
          ],
          "nullsNotDistinct": false,
          "name": "api_keys_key_hash_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can manage their own API keys": {
          "name": "Users can manage their own API keys",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        }
      },
      "isRLSEnabled": true
    },
    "public.api_usage": {
      "name": "api_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "api_key_id": {
          "name": "api_key_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "endpoint": {
          "name": "endpoint",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "response_time_ms": {
          "name": "response_time_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "status_code": {
          "name": "status_code",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_api_usage_api_key_id": {
          "name": "idx_api_usage_api_key_id",
          "columns": [
            {
              "expression": "api_key_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_api_usage_timestamp": {
          "name": "idx_api_usage_timestamp",
          "columns": [
            {
              "expression": "timestamp",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_usage_api_key_id_fkey": {
          "name": "api_usage_api_key_id_fkey",
          "tableFrom": "api_usage",
          "tableTo": "api_keys",
          "schemaTo": "public",
          "columnsFrom": [
            "api_key_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can view their own API usage": {
          "name": "Users can view their own API usage",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM api_keys\n  WHERE ((api_keys.id = api_usage.api_key_id) AND (api_keys.user_id = auth.uid()))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.sanctioned_wallets": {
      "name": "sanctioned_wallets",
      "schema": "",
      "columns": {
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'OFAC'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_sanctioned_wallets_address": {
          "name": "idx_sanctioned_wallets_address",
          "columns": [
            {
              "expression": "address",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to sanctioned wallets": {
          "name": "Allow public read access to sanctioned wallets",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to sanctioned wallets": {
          "name": "Allow service role full access to sanctioned wallets",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.risk_scores": {
      "name": "risk_scores",
      "schema": "",
      "columns": {
        "wallet": {
          "name": "wallet",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "band": {
          "name": "band",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'LOW'"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "confidence": {
          "name": "confidence",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'1.0'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "last_updated": {
          "name": "last_updated",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_risk_scores_confidence": {
          "name": "idx_risk_scores_confidence",
          "columns": [
            {
              "expression": "confidence",
              "asc": true,
              "nulls": "last",
              "opclass": "numeric_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_risk_scores_last_updated": {
          "name": "idx_risk_scores_last_updated",
          "columns": [
            {
              "expression": "last_updated",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_risk_scores_wallet": {
          "name": "idx_risk_scores_wallet",
          "columns": [
            {
              "expression": "wallet",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow public read access to risk scores": {
          "name": "Allow public read access to risk scores",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Allow service role full access to risk scores": {
          "name": "Allow service role full access to risk scores",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.risk_events": {
      "name": "risk_events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "wallet": {
          "name": "wallet",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "feature": {
          "name": "feature",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "weight_applied": {
          "name": "weight_applied",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "category": {
          "name": "category",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "confidence": {
          "name": "confidence",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'1.0'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_risk_events_category": {
          "name": "idx_risk_events_category",
          "columns": [
            {
              "expression": "category",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_risk_events_created_at": {
          "name": "idx_risk_events_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_risk_events_occurred_at": {
          "name": "idx_risk_events_occurred_at",
          "columns": [
            {
              "expression": "occurred_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_risk_events_wallet": {
          "name": "idx_risk_events_wallet",
          "columns": [
            {
              "expression": "wallet",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow service role full access to risk events": {
          "name": "Allow service role full access to risk events",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "((auth.jwt() ->> 'role'::text) = 'service_role'::text)"
        }
      },
      "isRLSEnabled": true
    },
    "public.relay_logs": {
      "name": "relay_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "partner_id": {
          "name": "partner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "chain": {
          "name": "chain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "from_addr": {
          "name": "from_addr",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "to_addr": {
          "name": "to_addr",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "decision": {
          "name": "decision",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "risk_band": {
          "name": "risk_band",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "risk_score": {
          "name": "risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "reasons": {
          "name": "reasons",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "tx_hash": {
          "name": "tx_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "idempotency_key": {
          "name": "idempotency_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_relay_logs_created_at": {
          "name": "idx_relay_logs_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_relay_logs_partner_id": {
          "name": "idx_relay_logs_partner_id",
          "columns": [
            {
              "expression": "partner_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_relay_logs_to_addr": {
          "name": "idx_relay_logs_to_addr",
          "columns": [
            {
              "expression": "to_addr",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "relay_logs_decision_check": {
          "name": "relay_logs_decision_check",
          "value": "decision = ANY (ARRAY['allowed'::text, 'blocked'::text])"
        }
      },
      "policies": {
        "Allow service role full access to relay logs": {
          "name": "Allow service role full access to relay logs",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "((auth.jwt() ->> 'role'::text) = 'service_role'::text)"
        },
        "Users can view their own relay logs": {
          "name": "Users can view their own relay logs",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.developer_profiles": {
      "name": "developer_profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "company_name": {
          "name": "company_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "api_usage_plan": {
          "name": "api_usage_plan",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'free'"
        },
        "monthly_request_limit": {
          "name": "monthly_request_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1000
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "partner_id": {
          "name": "partner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "job_title": {
          "name": "job_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "business_type": {
          "name": "business_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "developer_profiles_user_id_fkey": {
          "name": "developer_profiles_user_id_fkey",
          "tableFrom": "developer_profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "developer_profiles_user_id_key": {
          "columns": [
            "user_id"
          ],
          "nullsNotDistinct": false,
          "name": "developer_profiles_user_id_key"
        },
        "developer_profiles_partner_id_key": {
          "columns": [
            "partner_id"
          ],
          "nullsNotDistinct": false,
          "name": "developer_profiles_partner_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can manage their own developer profile": {
          "name": "Users can manage their own developer profile",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(auth.uid() = user_id)"
        }
      },
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "relay_logs": {
        "columns": {
          "reasons": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}